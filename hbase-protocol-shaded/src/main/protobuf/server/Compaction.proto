/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
syntax = "proto2";

// This file contains protocol buffers that are used for CompactionManagerProtocol.
package hbase.pb;

option java_package = "org.apache.hadoop.hbase.shaded.protobuf.generated";
option java_outer_classname = "CompactionProtos";
option java_generic_services = true;
option java_generate_equals_and_hash = true;
option optimize_for = SPEED;

import "HBase.proto";
import "server/ClusterStatus.proto";
import "server/ErrorHandling.proto";

message CompactRequest {
  required ServerName server = 1;
  required RegionInfo region_info = 2;
  required ColumnFamilySchema family = 3;
  required bool major = 4;
  required int32 priority = 5;
  repeated ServerName favored_nodes = 6;
}

message CompactResponse {
}

message CompleteCompactionRequest {
  required RegionInfo region_info = 1;
  required ColumnFamilySchema family = 2;
  repeated string selected_files = 3;
  repeated string new_files = 4;
  required bool new_force_major = 5;
}

message CompleteCompactionResponse {
  required bool success = 1;
}

service CompactionService {
  /** Called when a region server request compact a column of a region. */
  rpc RequestCompaction(CompactRequest)
  returns(CompactResponse);

}
