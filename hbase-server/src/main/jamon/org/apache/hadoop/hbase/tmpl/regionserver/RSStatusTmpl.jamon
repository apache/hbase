<%doc>

Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements.  See the NOTICE file
distributed with this work for additional information
regarding copyright ownership.  The ASF licenses this file
to you under the Apache License, Version 2.0 (the
"License"); you may not use this file except in compliance
with the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
</%doc>
<%args>
HRegionServer regionServer;
String filter = "general";
String format = "html";
String bcn = "";
String bcv = "";
</%args>
<%import>
java.util.*;
org.apache.hadoop.hbase.regionserver.HRegionServer;
org.apache.hadoop.hbase.client.RegionInfo;
org.apache.hadoop.hbase.ServerName;
org.apache.hadoop.hbase.HBaseConfiguration;
org.apache.hadoop.hbase.io.hfile.CacheConfig;
org.apache.hadoop.hbase.shaded.protobuf.ProtobufUtil;
org.apache.hadoop.hbase.shaded.protobuf.generated.AdminProtos.ServerInfo;
org.apache.hadoop.hbase.util.JvmVersion;
org.apache.hadoop.hbase.zookeeper.MasterAddressTracker;
</%import>
<%doc>If json AND bcn is NOT an empty string presume it a block cache view request.</%doc>
<%if format.equals("json") && bcn != null && bcn.length() > 0  %>
  <& BlockCacheViewTmpl; conf = regionServer.getConfiguration(); cacheConfig = new CacheConfig(regionServer.getConfiguration()); bcn = bcn; bcv = bcv; blockCache = regionServer.getBlockCache().orElse(null)  &>
  <%java return; %>
<%elseif format.equals("json") %>
  <& ../common/TaskMonitorTmpl; filter = filter; format = "json" &>
  <%java return; %>
</%if>
<%java>
  ServerInfo serverInfo = ProtobufUtil.getServerInfo(null, regionServer.getRSRpcServices());
  ServerName serverName = ProtobufUtil.toServerName(serverInfo.getServerName());
  List<RegionInfo> onlineRegions = ProtobufUtil.getOnlineRegions(regionServer.getRSRpcServices());
  MasterAddressTracker masterAddressTracker = regionServer.getMasterAddressTracker();
  ServerName masterServerName = masterAddressTracker == null ? null
    : masterAddressTracker.getMasterAddress();
  int infoPort = masterAddressTracker == null ? 0 : masterAddressTracker.getMasterInfoPort();
</%java>

<%class>
  public String formatZKString() {
    StringBuilder quorums = new StringBuilder();
    String zkQuorum = regionServer.getZooKeeper().getQuorum();

    if (null == zkQuorum) {
      return quorums.toString();
    }

    String[] zks = zkQuorum.split(",");

    if (zks.length == 0) {
      return quorums.toString();
    }

    for(int i = 0; i < zks.length; ++i) {
      quorums.append(zks[i].trim());

      if (i != (zks.length - 1)) {
        quorums.append("<br/>");
      }
    }

    return quorums.toString();
  }
</%class>

<!DOCTYPE html>
<?xml version="1.0" encoding="UTF-8" ?>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <title>HBase Region Server: <% serverName.getHostname() %></title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="">

    <link href="/static/css/bootstrap.min.css" rel="stylesheet">
    <link href="/static/css/hbase.css" rel="stylesheet">
    <link rel="shortcut icon" href="/static/favicon.ico">
  </head>

  <body>

    <nav class="navbar navbar-expand-md navbar-light fixed-top bg-light">
      <div class="container-fluid">
        <a class="navbar-brand" href="/rs-status">
          <img src="/static/hbase_logo_small.png" alt="HBase Logo"/>
        </a>
        <button type="button" class="navbar-toggler" data-bs-toggle="collapse" data-bs-target=".navbar-collapse">
          <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse">
          <ul class="navbar-nav">
            <li class="nav-item"><a class="nav-link active" href="/rs-status">Home</a></li>
            <li class="nav-item"><a class="nav-link" href="/processRS.jsp">Process Metrics</a></li>
            <li class="nav-item"><a class="nav-link" href="/logs/">Local Logs</a></li>
            <li class="nav-item"><a class="nav-link" href="/rsOperationDetails.jsp">Operation Details</a></li>
            <li class="nav-item"><a class="nav-link" href="/logLevel">Log Level</a></li>
            <li class="nav-item"><a class="nav-link" href="/dump">Debug Dump</a></li>
            <li class="nav-item dropdown">
              <a class="nav-link dropdown-toggle" href="#" id="navbarDropdownMenuLink" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                Metrics <span class="caret"></span>
              </a>
              <div class="dropdown-menu" aria-labelledby="navbarDropdownMenuLink">
                <a class="dropdown-item" target="_blank" href="/jmx">JMX</a>
                <a class="dropdown-item" target="_blank" href="/jmx?description=true">JMX with description</a>
                <a class="dropdown-item" target="_blank" href="/prometheus">Prometheus</a>
                <a class="dropdown-item" target="_blank" href="/prometheus?description=true">Prometheus with description</a>
              </div>
            </li>
            <li class="nav-item"><a class="nav-link" href="/prof">Profiler</a></li>
            <%if HBaseConfiguration.isShowConfInServlet()%>
            <li class="nav-item"><a class="nav-link" href="/conf">HBase Configuration</a></li>
            </%if>
          </ul>
        </div><!--/.navbar-collapse -->
      </div><!--/.container-fluid -->
    </nav>

  <div class="container-fluid content">
    <div class="row inner_header">
        <div class="page-header">
            <h1>RegionServer <small><% serverName %></small></h1>
        </div>
    </div>
    <div class="row">

    <section>
    <h2>Server Metrics</h2>
    <& ServerMetricsTmpl; mWrap = regionServer.getMetrics().getRegionServerWrapper();
      mServerWrap = regionServer.getRpcServer().getMetrics().getHBaseServerWrapper();
      bbAllocator = regionServer.getRpcServer().getByteBuffAllocator(); &>
    </section>

    <section>
    <h2>Block Cache</h2>
    <& BlockCacheTmpl; cacheConfig = new CacheConfig(regionServer.getConfiguration()); config = regionServer.getConfiguration(); bc = regionServer.getBlockCache().orElse(null) &>
    </section>

    <section>
    <& ../common/TaskMonitorTmpl; filter = filter; parent = "/rs-status" &>
    </section>

    <section>
    <h2>Regions</h2>
    <& RegionListTmpl; regionServer = regionServer; onlineRegions = onlineRegions; &>
    </section>

    <section>
    <h2>Replication Status</h1>
    <& ReplicationStatusTmpl; regionServer = regionServer; &>
    </section>

    <section>
    <h2>Software Attributes</h2>
    <table id="attributes_table" class="table table-striped">
        <tr>
            <th>Attribute Name</th>
            <th>Value</th>
            <th>Description</th>
        </tr>
        <tr>
            <td>JVM Version</td>
            <td><% JvmVersion.getVersion() %></td>
            <td>JVM vendor and version</td>
        </tr>
        <tr>
            <td>HBase Version</td>
            <td><% org.apache.hadoop.hbase.util.VersionInfo.getVersion() %>, revision=<% org.apache.hadoop.hbase.util.VersionInfo.getRevision() %></td>
            <td>HBase version and revision</td>
        </tr>
        <tr>
            <td>HBase Compiled</td>
            <td><% org.apache.hadoop.hbase.util.VersionInfo.getDate() %>, <% org.apache.hadoop.hbase.util.VersionInfo.getUser() %></td>
            <td>When HBase version was compiled and by whom</td>
        </tr>
        <tr>
            <td>HBase Source Checksum</td>
            <td><% org.apache.hadoop.hbase.util.VersionInfo.getSrcChecksum() %></td>
            <td>HBase source SHA512 checksum</td>
        </tr>
        <tr>
            <td>Hadoop Version</td>
            <td><% org.apache.hadoop.util.VersionInfo.getVersion() %>, revision=<% org.apache.hadoop.util.VersionInfo.getRevision() %></td>
            <td>Hadoop version and revision</td>
        </tr>
        <tr>
            <td>Hadoop Compiled</td>
            <td><% org.apache.hadoop.util.VersionInfo.getDate() %>, <% org.apache.hadoop.util.VersionInfo.getUser() %></td>
            <td>When Hadoop version was compiled and by whom</td>
        </tr>
        <tr>
            <td>Hadoop Source Checksum</td>
            <td><% org.apache.hadoop.util.VersionInfo.getSrcChecksum() %></td>
            <td>Hadoop source MD5 checksum</td>
        </tr>
        <tr>
            <td>ZooKeeper Client Version</td>
            <td><% org.apache.zookeeper.Version.getVersion() %>, revision=<% org.apache.zookeeper.Version.getRevisionHash() %></td>
            <td>ZooKeeper client version and revision hash</td>
        </tr>
        <tr>
            <td>ZooKeeper Client Compiled</td>
            <td><% org.apache.zookeeper.Version.getBuildDate() %></td>
            <td>When ZooKeeper client version was compiled</td>
        </tr>
        <tr>
            <td>ZooKeeper Quorum</td>
            <%escape #n>
            <td><% formatZKString() %></td>
            <td>Addresses of all registered ZK servers</td>
        </tr>
        <tr>
            <td>Coprocessors</td>
            <td><% java.util.Arrays.toString(regionServer.getRegionServerCoprocessors()) %></td>
            <td>Coprocessors currently loaded by this regionserver</td>
        </tr>
        <tr>
            <td>RS Start Time</td>
            <td><% new Date(regionServer.getStartcode()) %></td>
            <td>Date stamp of when this region server was started</td>
        </tr>
        <tr>
            <td>HBase Master</td>
            <td>
                <%if masterServerName == null %>
                No master found
                <%else>
                <%java>
                String host = masterServerName.getHostname() + ":" + infoPort;
                String url = "//" + host + "/master-status";
                </%java>
                <a href="<% url %>"><% host %></a>
                </%if>
            </td>
            <td>Address of HBase Master</td>
        </tr>
    </table>
    </section>
    </div>
</div>
<script src="/static/js/jquery.min.js" type="text/javascript"></script>
<script src="/static/js/jquery.tablesorter.min.js" type="text/javascript"></script>
<script src="/static/js/bootstrap.min.js" type="text/javascript"></script>
<script src="/static/js/tab.js" type="text/javascript"></script>
<script>
$(document).ready(function()
    {
        $.tablesorter.addParser({
            id: 'filesize',
            is: function(s) {
                return s.match(new RegExp( /([\.0-9]+)\ (B|KB|MB|GB|TB)/ ));
            },
            format: function(s) {
                var suf = s.match(new RegExp( /(KB|B|GB|MB|TB)$/ ))[1];
                var num = parseFloat(s.match( new RegExp( /([\.0-9]+)\ (B|KB|MB|GB|TB)/ ))[0]);
                switch(suf) {
                    case 'B':
                        return num;
                    case 'KB':
                        return num * 1024;
                    case 'MB':
                        return num * 1024 * 1024;
                    case 'GB':
                        return num * 1024 * 1024 * 1024;
                    case 'TB':
                        return num * 1024 * 1024 * 1024 * 1024;
                }
            },
            type: 'numeric'
        });
        $.tablesorter.addParser(
        {
            id: "separator",
            is: function (s) {
                return /^[0-9]?[0-9,]*$/.test(s);
            },
            format: function (s) {
                return $.tablesorter.formatFloat( s.replace(/,/g,'') );
            },
            type: "numeric"
        });

        $("#baseStatsTable").tablesorter({
            headers: {
                '.cls_emptyMin': {empty: 'emptyMin'},
                '.cls_emptyMax': {empty: 'emptyMax'}
            }
        });
        $("#requestStatsTable").tablesorter({
            headers: {
                '.cls_separator': {sorter: 'separator'}
            }
        });
        $("#storeStatsTable").tablesorter({
            headers: {
                '.cls_separator': {sorter: 'separator'},
                '.cls_filesize': {sorter: 'filesize'}
            }
        });
        $("#compactionStatsTable").tablesorter({
            headers: {
                '.cls_separator': {sorter: 'separator'}
            }
        });
        $("#memstoreStatsTable").tablesorter({
            headers: {
                '.cls_filesize': {sorter: 'filesize'}
            }
        });
    }
);
</script>
</body>
</html>
