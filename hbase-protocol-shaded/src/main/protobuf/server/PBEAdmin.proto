/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
syntax = "proto2";
package hbase.pb;

option java_package = "org.apache.hadoop.hbase.protobuf.generated";
option java_outer_classname = "PBEAdminProtos";
option java_generic_services = true;
option java_generate_equals_and_hash = true;
option optimize_for = SPEED;

message PBEAdminRequest {
  required string pbe_prefix = 1;
  required string key_namespace = 2;
}

enum PBEKeyStatus {
  PBE_ACTIVE = 1;
  PBE_INACTIVE = 2;
  PBE_FAILED = 3;
  PBE_DISABLED = 4;
}

message PBEAdminResponse {
  required string pbe_prefix = 1;
  required string key_namespace = 2;
  required PBEKeyStatus pbe_status = 3;
  optional string key_metadata = 4;
  optional int64 refresh_timestamp = 5;
  optional int64 read_op_count = 6;
  optional int64 write_op_count = 7;
}

message PBEGetStatusResponse {
  repeated PBEAdminResponse status = 1;
}

service PBEAdminService {
  rpc EnablePBE(PBEAdminRequest)
    returns (PBEAdminResponse);
  rpc GetPBEStatuses(PBEAdminRequest)
    returns (PBEGetStatusResponse);
}
