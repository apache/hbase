/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
syntax = "proto2";
package hbase.pb;

option java_package = "org.apache.hadoop.hbase.protobuf.generated";
option java_outer_classname = "VisibilityLabelsProtos";
option java_generic_services = true;
option java_generate_equals_and_hash = true;
option optimize_for = SPEED;

import "Client.proto";

message VisibilityLabelsRequest {
  repeated VisibilityLabel visLabel = 1;
}

message VisibilityLabel {
  required bytes label = 1;
  optional uint32 ordinal = 2;
}

message VisibilityLabelsResponse {
  repeated RegionActionResult result = 1; 
}

message SetAuthsRequest {
  required bytes user = 1;
  repeated bytes auth = 2;
}

message UserAuthorizations {
  required bytes user = 1;
  repeated uint32 auth = 2;
}

message MultiUserAuthorizations {
  repeated UserAuthorizations userAuths = 1;
}

message GetAuthsRequest {
  required bytes user = 1;
}

message GetAuthsResponse {
  required bytes user = 1;
  repeated bytes auth = 2;
}

message ListLabelsRequest {
  optional string regex = 1;
}

message ListLabelsResponse {
  repeated bytes label = 1;
}

service VisibilityLabelsService {
  rpc addLabels(VisibilityLabelsRequest)
    returns (VisibilityLabelsResponse);
  rpc setAuths(SetAuthsRequest)
    returns (VisibilityLabelsResponse);
  rpc clearAuths(SetAuthsRequest)
    returns (VisibilityLabelsResponse);
  rpc getAuths(GetAuthsRequest)
    returns (GetAuthsResponse);
  rpc listLabels(ListLabelsRequest)
    returns (ListLabelsResponse);
}
